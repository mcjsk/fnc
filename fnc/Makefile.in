all:
include ../subdir-inc.make
LIB_CURSES := @LIB_CURSES@
ifeq (,$(LIB_CURSES))
$(error Expecting LIB_CURSES to be set by the configure process.)
endif
CFLAGS_CURSES := @CFLAGS_CURSES@
LIBF_DIR := $(TOP_DIR)/src
CPPFLAGS += -I$(LIBF_DIR) $(CFLAGS_CURSES)

########################################################################
# To build fnc, we need the curses and pthread libraries.
# -lz is for libfossil
# -liconv is for libfossil on macOS
# -lutil is... ???
# -lm is for sqlite3
FNC_LDFLAGS := $(LIBF_DIR)/libfossil.o $(LIBF_DIR)/sqlite3.o
PLATFORM := $(shell sh -c 'uname 2>/dev/null || echo Unknown')
ifneq ($(filter $(PLATFORM),Darwin),)
  FNC_LDFLAGS += -liconv
endif
FNC_LDFLAGS += -lm
FNC_LDFLAGS += $(LIB_CURSES) -lutil -lz -lpthread

# This is needed for Mac builds, else they don't see the
# wide-char curses APIs:
CPPFLAGS += -D_XOPEN_SOURCE_EXTENDED

fnc.BIN.OBJECTS += fnc.o
fnc.BIN.LDFLAGS := $(FNC_LDFLAGS)
$(eval $(call ShakeNMake.CALL.RULES.BIN,fnc))
all: $(fnc.BIN)

ShakeNMake.install.bins := $(fnc.BIN)
